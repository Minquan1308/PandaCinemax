@model DoAnCoSoTL.Models.Cinema

@{
    Layout = "_AdminLayout";
}

<h2>Edit Cinema</h2>

<form asp-action="Update" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Location" class="control-label"></label>
        <textarea asp-for="Location" class="form-control"></textarea>
        <span asp-validation-for="Location" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Image">Movie Image</label>
        <input type="file" asp-for="Image" class="form-control-file" id="imageInput" onchange="previewImage(event)" />
        <img id="imagePreview" src="@Model.Image" alt="Movie Image" class="img-thumbnail mt-2" />
    </div>

    <button type="submit" class="btn btn-primary">Update</button>
    <a asp-action="Index" class="btn btn-success">Back</a>
</form>

<script>
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('imagePreview');
            output.src = reader.result;
            output.classList.add('enlarged'); // Add the class to enlarge the image
        }
        reader.readAsDataURL(event.target.files[0]);
    }
</script>

@* @if (!ViewData.ModelState.IsValid)
{
    var errorCount = ViewData.ModelState.Values.SelectMany(v => v.Errors).Count();
    <div class="alert alert-danger">
        <strong>Total Errors: @errorCount</strong>
        <ul>
            @foreach (var state in ViewData.ModelState)
            {
                foreach (var error in state.Value.Errors)
                {
                    <li>@error.ErrorMessage</li>
                    @if (error.Exception != null)
                    {
                        <li>Exception: @error.Exception.Message</li>
                    }
                }
            }
        </ul>
    </div>
} *@
