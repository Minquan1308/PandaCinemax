@model List<DoAnCoSoTL.Models.DetailWithMovieInfoModel>
@inject MovieContext dbContext
@{

    List<SelectListItem> cinemas = new List<SelectListItem>
    {
        new SelectListItem { Value = "0", Text = "All" }
    };

    // Thêm các rạp chiếu vào danh sách cinemas
    cinemas.AddRange(new SelectList(dbContext.Cinemas.ToList(), "Id", "Name"));
}

@{
    // Lấy ngày  bắt đầu làm đồ án
    DateTime specificDate = new DateTime(2024, 4, 18);

    // Lấy ngày hiện tại
    DateTime currentDate = DateTime.Today.Date;

    // Tạo danh sách các ngày từ ngày được chọn đến ngày hiện tại
    List<DateTime> dateList = new List<DateTime>();
    DateTime dateIterator = specificDate;
    while (dateIterator <= currentDate)
    {
        dateList.Add(dateIterator);
        dateIterator = dateIterator.AddDays(1);
    }
}

<div class="date-picker mb-4">
    <form class="form-inline" method="post" action="/Admin/Admin/DailyRevenue">
        <div class="form-group mb-2">
            <label for="dateSelector" class="mr-2">Select Date:</label>
            <select class="form-control" id="dateSelector" name="date">
                @foreach (var date in dateList)
                {
                    <option value="@date.ToString("yyyy-MM-dd")">@date.ToShortDateString()</option>
                }
            </select>
        </div>

        <div class="form-group mx-sm-3 mb-2">
            <label for="cinemaSelector" class="mr-2">Select Cinema:</label>
            <select class="form-control" id="cinemaSelector" name="location">
                @foreach (var cinema in cinemas)
                {
                    if (cinema.Text == ViewBag.SelectedCinema)
                    {
                        <option value="@cinema.Text" selected>@cinema.Text</option>
                    }
                    else
                    {
                        <option value="@cinema.Text">@cinema.Text</option>
                    }
                }
            </select>
        </div>

        <button type="submit" class="btn btn-primary mb-2">Submit</button>
    </form>
</div>

<div class="container">
    <h2 class="text-center mt-5 mb-3">Daily Revenue</h2>

    @if (Model.Any())
    {
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">OrderId</th>
                    <th scope="col">CustomerId</th>
                    <th scope="col">OrderDate</th>
                    <th scope="col">Movie</th>
                    <th scope="col">TotalPrice</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.OrderId</td>
                        <td>@order.UserId</td>
                        <td>@order.OrderDate</td>
                        <td>@order.MovieName</td>
                        <td>@order.Price</td>
                        <td>
                            <a href="@Url.Action("Details", "Admin", new { area = "Admin", orderId = order.OrderId })" class="btn btn-info btn-sm"><i class="fa fa-arrow-circle-right"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="summary-info">
            <p>Revenue of the day: @ViewBag.Total</p>
            <p>Cash: @ViewBag.COD</p>
            <p>VNPay: @ViewBag.VNPay</p>
            <p>Monthly Revenue Up To Selected Date:@ViewBag.MonthlyRevenueUpToSelectedDate</p>
            <p>Total Monthly Revenue: @ViewBag.TotalMonthlyRevenue</p>
        </div>
    }
    else
    {
        <p class="text-center">There are currently no orders for the day.</p>
        <div class="summary-info">
            <p>Revenue of the day: @ViewBag.Total</p>
            <p>COD: @ViewBag.COD</p>
            <p>VNPay: @ViewBag.VNPay</p>
            <p>Monthly Revenue Up To Selected Date:@ViewBag.MonthlyRevenueUpToSelectedDate</p>
            <p>Total Monthly Revenue: @ViewBag.TotalMonthlyRevenue</p>
        </div>
    }
</div>

<script>
    // Hàm sẽ được gọi khi người dùng thay đổi giá trị trong menu dropdown của rạp chiếu
    function filterByCinema() {
        var selectedCinema = document.getElementById("cinemaSelector").value;
        document.getElementById("selectedCinemaDisplay").innerText = selectedCinema;
    }

    window.onload = function () {
        var dateSelector = document.getElementById("dateSelector");
        var selectedDate = "@ViewBag.SelectedDate";
        if (selectedDate) {
            dateSelector.value = selectedDate;
            document.getElementById("selectedDateDisplay").innerText = selectedDate;
        }

        var cinemaSelector = document.getElementById("cinemaSelector");
        var selectedCinema = "@ViewBag.SelectedCinema";
        if (selectedCinema) {
            cinemaSelector.value = selectedCinema;
            document.getElementById("selectedCinemaDisplay").innerText = selectedCinema;
        }
    };
</script>
<style>
    .date-picker {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .summary-info {
        display: flex;
        flex-direction: column;
        margin-top: 20px;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .summary-info p {
            margin: 0;
            font-weight: bold;
        }

    .form-inline {
        display: flex;
        align-items: center;
    }

        .form-inline label {
            margin-right: 10px;
        }

        .form-inline .form-control {
            width: auto;
        }

    .table {
        margin-top: 20px;
    }

        .table thead {
            background-color: #343a40;
            color: white;
        }
</style>